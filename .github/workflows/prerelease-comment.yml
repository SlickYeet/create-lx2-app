name: Write Beta Release comment

on:
  workflow_run:
    workflows: ["Release - Beta"]
    types:
      - completed

jobs:
  comment:
    if: |
      github.repository_owner == 'SlickYeet' &&
      contains(github.event.pull_request.labels.*.name, 'ðŸš€ betarelease')
      ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    name: Write comment to the PR
    steps:
      - name: "Comment on PR"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");

            if (!process.env.GITHUB_ENV) {
              throw new Error("GITHUB_ENV is not defined in the environment.");
            }

            const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });

            for (const artifact of allArtifacts.data.artifacts) {
              // Extract the PR number and package version from the artifact name
              const match = /^npm-package-create-tnt-stack@(.*?)-pr-(\d+)/.exec(artifact.name);

              if (match) {
                const envData = `
                BETA_PACKAGE_VERSION=${match[1]}
                WORKFLOW_RUN_PR=${match[2]}
                WORKFLOW_RUN_ID=${context.payload.workflow_run.id}`;

                fs.appendFileSync(process.env.GITHUB_ENV, envData.trim() + "\n");
                break;
              }
            }

      - name: "Comment on PR with Link"
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ env.WORKFLOW_RUN_PR }}
          message: |
            A new create-tnt-stack prerelease is available for testing. You can install this latest build in your project with:

            ```sh
            bun create tnt-stack@${{ env.BETA_PACKAGE_VERSION }}
            ```

      - name: "Remove the autorelease label once published"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ env.WORKFLOW_RUN_PR }},
              name: 'ðŸš€ betarelease'
            });
