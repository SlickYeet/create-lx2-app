// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://authjs.dev/getting-started/adapters/prisma#schema
    // https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Post {
    id        String   @id @default(cuid())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id String @id @default(cuid())

    type              String
    scope             String?
    session_state     String?
    provider          String
    providerAccountId String

    id_token                 String? // @db.Text
    token_type               String?
    access_token             String? // @db.Text
    refresh_token            String? // @db.Text
    refresh_token_expires_in Int?

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    expires_at Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id String @id @default(cuid())

    sessionToken String @unique

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String

    expires DateTime
}

model User {
    id String @id @default(cuid())

    name          String?
    email         String?   @unique
    emailVerified DateTime?

    image String?

    accounts Account[]
    sessions Session[]
    posts    Post[]
}

model VerificationToken {
    token      String @unique
    identifier String

    expires DateTime

    @@unique([identifier, token])
}
